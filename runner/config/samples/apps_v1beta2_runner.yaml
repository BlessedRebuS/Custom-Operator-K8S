apiVersion: apps.gitlab.com/v1beta2
kind: Runner
metadata:
  name: runner-sample
spec:
  # Default values copied from <project_dir>/helm-charts/gitlab-runner/values.yaml
  affinity: {}
  checkInterval: 3
  concurrent: 10
  configMaps: {}
  deploymentAnnotations: {}
  deploymentLabels: {}
  deploymentLifecycle: {}
  extraEnv: {}
  extraEnvFrom: {}
  extraObjects: []
  hostAliases: []
  image:
    image: gitlab-org/gitlab-runner
    registry: registry.gitlab.com
  imagePullPolicy: IfNotPresent
  metrics:
    enabled: false
    port: 9252
    portName: metrics
    serviceMonitor:
      enabled: false
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    fsGroup: 65533
    runAsUser: 100
  priorityClassName: ""
  rbac:
    clusterWideAccess: false
    create: false
    generatedServiceAccountName: ""
    imagePullSecrets: []
    podSecurityPolicy:
      enabled: false
      resourceNames:
      - gitlab-runner
    rules: []
    serviceAccountAnnotations: {}
  resources: {}
  runners:
    cache: {}
    config: |
      [[runners]]
        [runners.kubernetes]
          namespace = "{{.Release.Namespace}}"
          image = "alpine"
    configPath: ""
  secrets: []
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    privileged: false
    readOnlyRootFilesystem: false
    runAsNonRoot: true
  service:
    enabled: false
    type: ClusterIP
  serviceAccount:
    annotations: {}
    imagePullSecrets: []
    name: ""
  sessionServer:
    enabled: false
  shutdown_timeout: 0
  strategy: {}
  terminationGracePeriodSeconds: 3600
  tolerations: []
  topologySpreadConstraints: {}
  useTini: false
  volumeMounts: []
  volumes: []
  
  
